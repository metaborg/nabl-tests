module Property

language WebDSL

setup Header [[
	module PropertyTest
	
	entity Entity {}
	type Void {}
	type Int {}
	type Float {}
	type String {}
]]

test Property definition 1 [[
	entity A {
		a -> A
	}
]]

test Property definition 2 [[
	entity A {
		i :: Int
	}
]]

test Property definition 3 [[
	entity A {}
	extend entity A {
		i :: Int
	}
]]

test Property reference 1 [[
	entity A {
		[[a]] -> A
		
		function test() {
			return [[a]];
		}
	}
]] resolve #2 to #1

test Property reference 2 [[
	entity A {
		[[i]] :: Int
	}
	extend entity A {
		function test() {
			return [[i]];
		}
	}
]] resolve #2 to #1

test Property reference 3 [[
	entity A {
		function test() {
			return [[i]];
		}
	}
	extend entity A {
		[[i]] :: Int
	}
]] resolve #1 to #2

// TODO: this works in a normal .app file, but not in this test?
test Property reference 4 [[
	entity A {
		[[i]] :: Int
	}
	entity B : A {
		function test() {
			return [[i]];
		}
	}
]] resolve #2 to #1

// TODO: this works in a normal .app file, but not in this test?
test Property reference 5 [[
	entity A {}
	extend entity A {
		[[i]] :: Int
	}
	entity B : A {
		function test() {
			return [[i]];
		}
	}
]] resolve #2 to #1

// TODO: is this valid WebDSL?
/*
test Property reference 5 [[
	entity A {
		[[i]] :: Int
	}
	entity B : A {}
	extend entity B {
		function test() {
			return [[i]];
		}
	}
]] resolve #2 to #1
*/

test Property access 1 [[
	entity A {
		[[a]] -> A
		
		function test() {
			return a.[[a]];
		}
	}
]] resolve #2 to #1

test Property access 2 [[
	entity A {
		b -> B
	}
	entity B {
		[[a]] -> A
	}
	entity C {
		b -> B
		function test() {
			return b.a.b.[[a]];
		}
	}
]] resolve #2 to #1

test Property access 3 [[
	entity A {}
	extend entity A {
		[[i]] :: Int
	}
	
	entity B {
		a -> A
		function test() {
			return a.[[i]];
		}
	}
]] resolve #2 to #1

test Property access 4 [[
	entity A {
		[[i]] :: Int
	}
	entity B : A {}
	
	entity C {
		b -> B
		function test() {
			return b.[[i]];
		}
	}
]] resolve #2 to #1

// TODO: is this valid WebDSL?
/*
test Property access 5 [[
	entity A {
		[[a]] -> A
	}
	entity B : A {}
	
	extend entity B {
		function test() {
			return a.[[a]];
		}
	}
]] resolve #2 to #1
*/

test Unresolved property 1 [[
	entity A {
		function test() {
			return [[a]];
		}
	}
	entity B { 
		a -> A
	}
]] 1 error

test Unresolved property 2 [[
	entity A {}
	extend entity A {
		function test() {
			return [[a]];
		}
	}
	entity C { 
		a -> A
	}
]] 1 error

test Unresolved property access 1 [[
	entity A {
		a -> A
		
		function test() {
			return a.[[b]];
		}
	}
]] 1 error

test Unresolved property access 2 [[
	entity A {}
	extend entity A {
		i :: Int
	}
	
	entity B {
		a -> A
		function test() {
			return a.[[s]];
		}
	}
]] 1 error

test Duplicate property 1 [[
	entity A {
		[[a -> A]]
		[[a :: Int]]
	}
]] 2 errors

test Duplicate property 2 [[
	entity A {
		[[a -> A]]
		[[a :: Int]]
	}
	extend entity A {
		[[a -> A]]
		[[a :: Int]]
	}
]] 4 errors
